{"version":3,"sources":["component/Admin/User/EmailSearch.js"],"names":["EmailSearch","props","_React$useState","React","useState","_React$useState2","Object","D_projects_transport_care_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","emails","setemails","_React$useState3","_React$useState4","dataSource","setdataSource","handleSearch","_ref","D_projects_transport_care_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_projects_transport_care_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","value","datas","_yield$client$query","data","wrap","_context","prev","next","onSelect","console","log","$regex","$options","Number","role","length","client","query","USER_EMAIL_QUERY","variables","fetchPolicy","sent","user_search","stop","_x","apply","this","arguments","_ref2","_callee2","pass_value","_context2","passedFunction","_x2","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","antd__WEBPACK_IMPORTED_MODULE_4__","onSearch","placeholder","allowClear","autoClearSearchValue","className","map","user","index","Option","key","_id"],"mappings":"8KAkEeA,UA7DK,SAAAC,GAEhB,IAAAC,EAA4BC,IAAMC,SAAS,IAA3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAOM,EAAPH,EAAA,GAAeI,EAAfJ,EAAA,GACAK,EAAoCP,IAAMC,SAAS,IAAnDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GAEMG,EAAY,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACdP,EACCZ,EAAUY,GAEVQ,EAASR,GAEbS,QAAQC,IAAIV,IACRC,EAAO,IACLrB,EAAMoB,OAAS,CAAEW,OAAQX,EAAOY,SAAU,KAChDX,EAAK,KAASY,OAAOjC,EAAMkC,MAC3Bb,EAAK,OAAW,IACZD,EAAMe,QAAU,GAXH,CAAAV,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAYUS,IAAOC,MAAM,CAChCA,MAAOC,IACPC,UAAW,CAAEhB,KAAKF,GAClBmB,YAAa,aAfJ,OAAAlB,EAAAG,EAAAgB,KAYLlB,EAZKD,EAYLC,KAKRX,EAAcW,EAAOA,EAAKmB,YAAc,IAjB3B,yBAAAjB,EAAAkB,SAAAxB,MAAH,gBAAAyB,GAAA,OAAA9B,EAAA+B,MAAAC,KAAAC,YAAA,GAqBZnB,EAAQ,eAAAoB,EAAA3C,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAA+B,EAAM7B,GAAN,IAAA8B,EAAA,OAAAlC,EAAAC,EAAAO,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OAEbnB,EAAUY,GAEN8B,EAAW,GACG,IAAflD,EAAMkC,KACLgB,EAAU,QAAY9B,EAEtB8B,EAAU,YAAgB9B,EAE9BpB,EAAMoD,eAAeF,GAVR,wBAAAC,EAAAR,SAAAM,MAAH,gBAAAI,GAAA,OAAAL,EAAAH,MAAAC,KAAAC,YAAA,GAYd,OACIO,EAAArC,EAAAsC,cAAA,WACID,EAAArC,EAAAsC,cAACC,EAAA,EAAD,CACI5B,SAAUA,EACV6B,SAAU5C,EACV6C,YAAa1D,EAAM0D,YACnBtC,MAAOb,EACPoD,YAAU,EACVC,sBAAoB,EACpBC,UAAU,UAETlD,EAAWmD,IAAI,SAACC,EAAMC,GACnB,OACIV,EAAArC,EAAAsC,cAACC,EAAA,EAAaS,OAAd,CAAqBC,IAAKH,EAAKI,KAC1BJ,EAAK/D,EAAMoB","file":"static/js/6.0b021e04.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AutoComplete } from 'antd';\r\nimport { USER_EMAIL_QUERY  } from '../../../graphql/Admin/user';\r\nimport { client } from \"../../../apollo\";\r\n\r\nconst EmailSearch = props => {\r\n    \r\n    const [emails, setemails] = React.useState('');\r\n    const [dataSource, setdataSource] = React.useState([]);\r\n    \r\n    const handleSearch = async value => {\r\n        if(value){\r\n            setemails(value);\r\n        }else{\r\n            onSelect(value);\r\n        }\r\n        console.log(value);\r\n        var datas ={}\r\n        datas[props.value] = { $regex: value ,$options: 'i'}\r\n        datas['role']=Number(props.role);\r\n        datas['delete']=0;\r\n        if (value.length >= 1) {\r\n            const { data } = await client.query({\r\n                query: USER_EMAIL_QUERY,\r\n                variables: { data:datas },\r\n                fetchPolicy: 'no-cache',\r\n            });\r\n            setdataSource(data ? data.user_search : [])\r\n        }\r\n    };\r\n\r\n    const onSelect = async value => {\r\n      \r\n        setemails(value);\r\n       \r\n        var pass_value={}\r\n        if(props.role === 1){\r\n            pass_value['user_id']=value;\r\n        }else{\r\n            pass_value['provider_id']=value;\r\n        }\r\n        props.passedFunction(pass_value);\r\n    }\r\n    return (\r\n        <div>\r\n            <AutoComplete\r\n                onSelect={onSelect}\r\n                onSearch={handleSearch}\r\n                placeholder={props.placeholder}\r\n                value={emails}\r\n                allowClear\r\n                autoClearSearchValue\t\r\n                className=\"border\"\r\n            >\r\n                {dataSource.map((user, index) => {\r\n                    return (\r\n                        <AutoComplete.Option key={user._id}>\r\n                            {user[props.value]}\r\n                        </AutoComplete.Option>\r\n                    );\r\n                })}\r\n            </AutoComplete>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailSearch;\r\n"],"sourceRoot":""}